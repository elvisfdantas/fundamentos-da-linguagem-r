install.packages("tm")
install.packages('reshape2')
install.packages("SnowballC")
install.packages('wordcloud')
install.packages('wordcloud')
news_corpus <- createCorpus("C:/dadosR/Teste3.csv")
getwd()
getwd(C:/dadosR/Teste3.csv")
getwd(C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/Teste3.txt")
setwd(C:/dadosR/mineracao/Teste3.txt")
setwd(""C:/dadosR/mineracao")
setwd()
getwd()
setwd("C:/dadosR/mineracao")
getwd()
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
getwd()
news_corpus <- createCorpus("Teste3.txt")
news_corpus <- createCorpus("Teste3.txt")
getwd()
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
createCorpus <- function(filepath) {
  conn <- file(filepath, "r")
  fulltext <- readLines(conn)
  close(conn)
  vs <- VectorSource(fulltext)
  Corpus(vs, readerControl=list(readPlain, language="en", load=TRUE))
}
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
library(tm) 
library(reshape2)
library(ggplot2)
library(SnowballC)
library(wordcloud)
createCorpus <- function(filepath) {
  conn <- file(filepath, "r")
  fulltext <- readLines(conn)
  close(conn)
  vs <- VectorSource(fulltext)
  Corpus(vs, readerControl=list(readPlain, language="en", load=TRUE))
}
news_corpus <- createCorpus("C:/dadosR/mineracao/Teste3.txt")
dtm <- DocumentTermMatrix(news_corpus)   
dtm.matrix <- as.matrix(dtm)
wordcount <- colSums(dtm.matrix)
topten <- head(sort(wordcount, decreasing=TRUE), 10)
library(reshape2)
library(ggplot2)
# O gráfico abaixo mostra um histograma das dez palavras mais frequentes no corpus.
 dfplot <- as.data.frame(melt(topten))
 dfplot$word <- dimnames(dfplot)[[1]]
 dfplot$word <- factor(dfplot$word,
                       levels=dfplot$word[order(dfplot$value,
                                                decreasing=TRUE)])
 fig <- ggplot(dfplot, aes(x=word, y=value)) + geom_bar(stat="identity")
 fig <- fig + xlab("Palavras")
 fig <- fig + ylab("Frequência")
print(fig)
#Criando uma núvem de palavras
install.packages("wordcloud")
library(wordcloud)
set.seed(142) # O comando set.seed garante que os resultados obtidos possam ser reproduzidos em qualquer computador.
wordcloud(names(wordcount), wordcount, min.freq=25)
wordcloud(names(wordcount), wordcount, min.freq=25, colors=brewer.pal(6, "Dark2"))
wordcloud(names(wordcount), wordcount, max.words=100, rot.per=0.2, colors=brewer.pal(6, "Dark2"))
save.image("C:\\dadosR\\mineracao\\.RData")
PacienteSexoIdadePesoIMC
1M557227,65
2M426332,06
3F376822,88
4F465932,48
5F296627,32
6M488029,06
7F507122,55
dados = read.table("clipboard", header=T)
dados = read.table("clipboard", header=T)
Paciente Sexo Idade Peso IMC
1 M 5572 27.65
2 M 4263 32.06
3 F 3768 22.88
4 F 4659 32.48
5 F 2966 27.32
6 M 4880 29.06
7 F 5071 22.55
dados = read.table("clipboard", header=T)
dados = read.table("clipboard", header=T)
dados = read.table("clipboard", header=T)
head("dados")
head(dados)
class(Paciente)
class(1)
class(M)
class(M)
class(F)
class(F)
class(55)
class(72)
class(27.65)
class(27,65)
class(27.65)
class(1)
class(F)
class(55)
class(72)
class(27.65)
dados <- dados[, -which(names(dados) == "Paciente")]
head(dados)
dias_na_uti <- c(4, 10, 7, 12, 8, 5, 1)
          dados <- cbind(dados, Dias_na_UTI = dias_na_uti)
head(dados)
dados[$Peso]
dados[Peso]
dados["Peso"]
dados["Peso","IMC"]
dados[["Peso","IMC"]]
dados["Peso":"IMC"]
dados["Peso","IMC"]
dados["Peso""IMC"]
dados["Peso" "IMC"]
dados["Peso", "IMC"]
Select("Peso", "IMC")
library(dplyr)
Select("Peso", "IMC")
select("Peso", "IMC")
select("Peso", "IMC")
select["Peso", "IMC"]
select["Peso", "IMC"]
select["Peso", "IMC"]
select["Peso", "IMC"]
dados[IMC]
dados[IMC]
dados["IMC"]
dados["Peso","IMC"]
dados[["Peso","IMC"]]
dados = read.table("clipboard", header=T)
head(dados)
tipos <- sapply(dados, class)
print(tipos)
dias_na_uti <- c(4, 10, 7, 12, 8, 5, 1)
dados <- cbind(dados, Dias_na_UTI = dias_na_uti)
print(dados)
dados <- dados[order(-dados$Idade), ]
print(dados)
dados$Peso[5] <- 67
print(dados)
print(dados)
dados$Peso[5] <- 67
print(dados)
valores_acima_de_30 <- dados$IMC[dados$IMC > 30]
print(valores_acima_de_30)
media_imc <- mean(dados$IMC)
maior_media <- max(media_idade, media_peso, media_imc)
print(maior_media)
print(maior_media)
media_idade <- mean(dados$Idade)
media_peso <- mean(dados$Peso)
media_imc <- mean(dados$IMC)
maior_media <- max(media_idade, media_peso, media_imc)
print(maior_media)
print(maior_media)
print(maior_media)
media_idade <- mean(dados$Idade)
media_peso <- mean(dados$Peso)
media_imc <- mean(dados$IMC)
maior_media <- max(media_idade, media_peso, media_imc)
print(maior_media)
library(tm) 
library(reshape2)
library(ggplot2)
library(SnowballC)
library(wordcloud)
library(wordcloud)
ibrary(wordcloud)
library(wordcloud)
library(SnowballC)
library(wordcloud)
library(ggplot2)
library(ggplot2)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) +
  geom_bar() +
  labs(x = "SEXO", y = "FREQUÊNCIA") +
  scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
library(ggplot2)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) +
  geom_bar() +
  labs(x = "SEXO", y = "FREQUÊNCIA") +
  scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
library(ggplot2)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) +
geom_bar() +
labs(x = "SEXO", y = "FREQUÊNCIA") +
scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) +
  geom_bar() +
  labs(x = "SEXO", y = "FREQUÊNCIA") +
  scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) +
  geom_bar() +
  labs(x = "Sexo", y = "Frequencia") +
  scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
library(ggplot2)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) +
  geom_bar() +
  labs(x = "Sexo", y = "Frequencia") +
  scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
library(ggplot2)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) + geom_bar() + 
labs(x = "Sexo", y = "Frequencia") + 
scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
library(ggplot2)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) + geom_bar() + 
labs(x = "Sexo", y = "Frequencia") + 
scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) + geom_bar() + 
labs(x = "Sexo", y = "Frequencia") + 
scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
library(ggplot2)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) + geom_bar() + 
labs(x = "Sexo", y = "Frequencia") + 
scale_fill_manual(values = c("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
library(ggplot2)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) + geom_bar() + 
labs(x = "Sexo", y = "Frequencia") + 
scale_fill_manual(values = ("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) + geom_bar() + 
labs(x = "Sexo", y = "Frequencia") + 
scale_fill_manual(values = ("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
ggplot(data = dados, aes(x = Peso, y = IMC)) + geom_point()
head(dados)
ggplot(data = dados, aes(x = Peso, y = IMC)) + geom_point()
library(ggplot2)
ggplot(data = dados, aes(x = Peso, y = IMC)) + geom_point()
ggplot(data = dados, aes(x = Peso, y = IMC)) + geom_point()
library(ggplot2)
ggplot(data = dados, aes(x = Peso, y = IMC)) + geom_point()
ggplot(data = dados, aes(x = Peso, y = IMC)) + geom_point()
ggplot(data = dados, aes(x = Peso, y = IMC)) + geom_point(stat='identity')
head(dados)
dados$Dias_na_UTI=NULL
head(dados)
library(ggplot2)
ggplot(data = dados, aes(x = Peso, y = IMC)) + geom_point()
library(ggplot2)
grafico <- ggplot(dados, aes(x = Sexo, fill = Sexo)) + geom_bar() + 
labs(x = "Sexo", y = "Frequencia") + 
scale_fill_manual(values = ("Masculino" = "blue", "Feminino" = "pink"))
print(grafico)
leituras <- c(9839, 10149, 10486, 10746, 11264, 11684, 12082, 12599, 13004, 13350, 13717, 14052)
luz <- data.frame(Mês = month.abb, Leituras = leituras)
print(luz)
consumo <- c(diff(luz$Leituras), NA)  
luz.cons <- data.frame(Mês = month.abb, Consumo = consumo)
print(luz.cons)
consumo.media <- function(consumo) {
   media <- mean(consumo, na.rm = TRUE)
  return(media)
}
media_consumo <- consumo.media(luz.cons$Consumo)
print(media_consumo)
grafico_consumo <- ggplot(luz.cons, aes(x = Mês, y = Consumo)) +
  geom_bar(stat = "identity", fill = "skyblue", color = "black") +
  labs(title = "Consumo Mensal de Energia", x = "Mês", y = "Consumo") +
  theme_minimal()
print(grafico_consumo)
getwd()
dados<-read.csv("prova.csv", header=T, sep=";")
head(prova.csv)")
dados<-read.csv("prova.csv", header=T, sep=";")
head(prova.csv)
dados<-read.csv("prova.csv", header=T, sep=";")
head(dados)
getwd()
prova<-read.csv("prova.csv", header=T, sep=";")
head(prova)
getwd()
prova<-read.csv("prova.csv", header=T, sep=";")
head(prova)
library(tm) 
library(reshape2)
library(ggplot2)
library(SnowballC)
library(wordcloud)
#Primeiro eu carrego 
os dados em um Corpus (uma coleção de documentos) que é a estrutura de dados principal usada pelo tm.
library(tm) 
library(tm) 
#Primeiro eu carrego os dados em um Corpus (uma coleção de documentos) que é a estrutura de dados principal usada pelo tm.
library(tm) 
createCorpus <- function(filepath) {
  conn <- file(filepath, "r")
  fulltext <- readLines(conn)
  close(conn)
  vs <- VectorSource(fulltext)
  Corpus(vs, readerControl=list(readPlain, language="en", load=TRUE))
}
news_corpus <- createCorpus("C:/dadosR/mineracao/prova.csv")
dtm <- DocumentTermMatrix(news_corpus)   
dtm.matrix <- as.matrix(dtm)
wordcount <- colSums(dtm.matrix)
topten <- head(sort(wordcount, decreasing=TRUE), 10)
library(reshape2)
library(ggplot2)
# O gráfico abaixo mostra um histograma das dez palavras mais frequentes no corpus.
 dfplot <- as.data.frame(melt(topten))
 dfplot$word <- dimnames(dfplot)[[1]]
 dfplot$word <- factor(dfplot$word,
                       levels=dfplot$word[order(dfplot$value,
                                                decreasing=TRUE)])
 fig <- ggplot(dfplot, aes(x=word, y=value)) + geom_bar(stat="identity")
 fig <- fig + xlab("Palavras")
 fig <- fig + ylab("Frequência")
print(fig)
#Criando uma núvem de palavras
install.packages("wordcloud")
library(wordcloud)
set.seed(142) # O comando set.seed garante que os resultados obtidos possam ser reproduzidos em qualquer computador.
wordcloud(names(wordcount), wordcount, min.freq=25)
wordcloud(names(wordcount), wordcount, min.freq=25, colors=brewer.pal(6, "Dark2"))
wordcloud(names(wordcount), wordcount, max.words=100, rot.per=0.2, colors=brewer.pal(6, "Dark2"))
# criar uma matriz de termo-documento a partir de um corpus: os elementos dessa 
#matriz representam a ocorrência de um termo (uma palavra ou um n-grama) em um documento do corpus.
dtm <- DocumentTermMatrix(news_corpus)   
dtm.matrix <- as.matrix(dtm)
wordcount <- colSums(dtm.matrix)
topten <- head(sort(wordcount, decreasing=TRUE), 6)
library(reshape2)
library(ggplot2)
# O gráfico abaixo mostra um histograma das dez palavras mais frequentes no corpus.
 dfplot <- as.data.frame(melt(topten))
 dfplot$word <- dimnames(dfplot)[[1]]
 dfplot$word <- factor(dfplot$word,
                       levels=dfplot$word[order(dfplot$value,
                                                decreasing=TRUE)])
 fig <- ggplot(dfplot, aes(x=word, y=value)) + geom_bar(stat="identity")
 fig <- fig + xlab("Palavras")
 fig <- fig + ylab("Frequência")
print(fig)
q()
